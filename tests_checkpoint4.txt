// standard tests on operators
2 + 2
4
2 + 2/4
2 1/2
1/3 + 1/3
2/3
-1/6 + 2/12
0
-5 + 1/2
-4 1/2
0 + -1_9/18
-1 1/2
-2_1/4 + 2_1/2
1/4
1/-4 + 1/8
-1/8
1/4 + 1/-8
1/8
-1/-4 + -2
-1 3/4
1 - 1
0
0 - 2
-2
// subtotal
// tests involving subtracting a negative number and zero
0 - -2/4
1/2
1 - 5_1/4
-4 1/4
-5_1/4 - 1
-6 1/4
1_2/3 - 1_1/3
1/3
10_5/10 - 0
10 1/2
-1 - -0
-1
1_0/4 - 0/8
1
-0 - -4
4
0_2/3 - 0_1/3
1/3
// subtotal
// tests with multiplication, zeros, and negative denominators
1 * 10_4/8
10 1/2
2 * 1/2
1
1/2 * 0
0
1_1/3 * 3
4
-1/-7 * -1_0/1
-1/7
25 * 25
625
5 * 1/5
1
1/5 * 5/1
1
12345 * 0_0/1
0
-1 * 1/-2
1/2
3 / 1
3
0 / 10
0
1/3 / 1/3
1
-1 / -4
1/4
-1/-5 / -5/-1
1/25
1_1/10 / 11
1/10
21 / 7/2
6
1_1/4 / 1_1/2
5/6
9_9/9 / 1_1/1
5
// subtotal
// Extra-Credit Tests: Multiple operands, no operator precedence
1 + 2 * 3 - 4 / 2
2 1/2
1 - 1 / 6 + 7
7
0 + 0 + 0 - 1
-1
-1 - 1/2 - 1/2
-2
1 / 2 / 4 / 8 + 0
1/64
// subtotal
// Extra-Credit Tests: Multiple operands, WITH operator precidence
// The previous extra credit will not compound with this set of tests.
1 + 2 * 3 - 4 / 2
5
1 - 1 / 6 + 7
7 5/6
0 - -2 * -4 - 5 / 6
-8 5/6
1 + 3 + 2 - 1 / 2 / 4 / 8 
5 63/64
-4 / -7 + 4/7 * 2
1 5/7
// subtotal
// Extra-Credit Tests: Parentheses
1 * (2 - 3)
-1
(7 - 8) * -3
3
(((1 - 2) * (1 - 2)) * (1 - 2))
-1
1 / ((4 / 7) - (1 / 4))
3 1/9
(1/2 - 1/3) / 2
1/12
// subtotal
// Extra-Credit Tests: Handle improper input. 
word
<ignore>
1/0
<ignore>
1_1//2 + /3
<ignore>

<ignore>
1 1 1 1
<ignore>
// subtotal
// Extra-Credit Tests: infinite precision
1000000000001/300000000000003 - 1/34571875691
34571875391034571875688/10371562707300103715627073
9999999999999999999999999999 + 1
10000000000000000000000000000
1/99999999999999999999999999 + 1/55555555555555555555555
100055555555555555555555554/5555555555555555555555499944444444444444444444445
11111111111111111111111/2 * 2/1111111111111111111
10000 1111/1111111111111111111
86868686868686868686868/68686868686868686868 / 21/7
421 9764309764309764382/17171717171717171717
// subtotal